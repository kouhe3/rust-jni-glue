/* automatically generated by rust-bindgen 0.71.1 */

pub const _VCRT_COMPILER_PREPROCESSOR: u32 = 1;
pub const _SAL_VERSION: u32 = 20;
pub const __SAL_H_VERSION: u32 = 180000000;
pub const _USE_DECLSPECS_FOR_SAL: u32 = 0;
pub const _USE_ATTRIBUTES_FOR_SAL: u32 = 0;
pub const _CRT_PACKING: u32 = 8;
pub const _HAS_EXCEPTIONS: u32 = 1;
pub const NULL: u32 = 0;
pub const _HAS_CXX17: u32 = 0;
pub const _HAS_CXX20: u32 = 0;
pub const _HAS_CXX23: u32 = 0;
pub const _HAS_CXX26: u32 = 0;
pub const _HAS_NODISCARD: u32 = 1;
pub const _ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE: u32 = 1;
pub const _CRT_BUILD_DESKTOP_APP: u32 = 1;
pub const _ARGMAX: u32 = 100;
pub const _CRT_INT_MAX: u32 = 2147483647;
pub const _CRT_FUNCTIONS_REQUIRED: u32 = 1;
pub const _CRT_HAS_CXX17: u32 = 0;
pub const _CRT_HAS_C11: u32 = 0;
pub const _CRT_INTERNAL_NONSTDC_NAMES: u32 = 1;
pub const __STDC_SECURE_LIB__: u32 = 200411;
pub const __GOT_SECURE_LIB__: u32 = 200411;
pub const __STDC_WANT_SECURE_LIB__: u32 = 1;
pub const _SECURECRT_FILL_BUFFER_PATTERN: u32 = 254;
pub const _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES: u32 = 0;
pub const _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT: u32 = 0;
pub const _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES: u32 = 1;
pub const _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY: u32 = 0;
pub const _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY: u32 = 0;
pub const _CRT_INTERNAL_STDIO_SYMBOL_PREFIX: &[u8; 1] = b"\0";
pub const _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION: u32 = 1;
pub const _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR: u32 = 2;
pub const _CRT_INTERNAL_PRINTF_LEGACY_WIDE_SPECIFIERS: u32 = 4;
pub const _CRT_INTERNAL_PRINTF_LEGACY_MSVCRT_COMPATIBILITY: u32 = 8;
pub const _CRT_INTERNAL_PRINTF_LEGACY_THREE_DIGIT_EXPONENTS: u32 = 16;
pub const _CRT_INTERNAL_PRINTF_STANDARD_ROUNDING: u32 = 32;
pub const _CRT_INTERNAL_SCANF_SECURECRT: u32 = 1;
pub const _CRT_INTERNAL_SCANF_LEGACY_WIDE_SPECIFIERS: u32 = 2;
pub const _CRT_INTERNAL_SCANF_LEGACY_MSVCRT_COMPATIBILITY: u32 = 4;
pub const BUFSIZ: u32 = 512;
pub const _NSTREAM_: u32 = 512;
pub const _IOB_ENTRIES: u32 = 3;
pub const EOF: i32 = -1;
pub const _IOFBF: u32 = 0;
pub const _IOLBF: u32 = 64;
pub const _IONBF: u32 = 4;
pub const L_tmpnam: u32 = 260;
pub const L_tmpnam_s: u32 = 260;
pub const SEEK_CUR: u32 = 1;
pub const SEEK_END: u32 = 2;
pub const SEEK_SET: u32 = 0;
pub const FILENAME_MAX: u32 = 260;
pub const FOPEN_MAX: u32 = 20;
pub const _SYS_OPEN: u32 = 20;
pub const TMP_MAX: u32 = 2147483647;
pub const TMP_MAX_S: u32 = 2147483647;
pub const _TMP_MAX_S: u32 = 2147483647;
pub const SYS_OPEN: u32 = 20;
pub const JNI_FALSE: u32 = 0;
pub const JNI_TRUE: u32 = 1;
pub const JNI_OK: u32 = 0;
pub const JNI_ERR: i32 = -1;
pub const JNI_EDETACHED: i32 = -2;
pub const JNI_EVERSION: i32 = -3;
pub const JNI_ENOMEM: i32 = -4;
pub const JNI_EEXIST: i32 = -5;
pub const JNI_EINVAL: i32 = -6;
pub const JNI_COMMIT: u32 = 1;
pub const JNI_ABORT: u32 = 2;
pub const JNI_VERSION_1_1: u32 = 65537;
pub const JNI_VERSION_1_2: u32 = 65538;
pub const JNI_VERSION_1_4: u32 = 65540;
pub const JNI_VERSION_1_6: u32 = 65542;
pub const JNI_VERSION_1_8: u32 = 65544;
pub const JNI_VERSION_9: u32 = 589824;
pub const JNI_VERSION_10: u32 = 655360;
pub const JNI_VERSION_19: u32 = 1245184;
pub const JNI_VERSION_20: u32 = 1310720;
pub const JNI_VERSION_21: u32 = 1376256;
pub type va_list = *mut ::std::os::raw::c_char;
unsafe extern "C" {
    pub fn __va_start(arg1: *mut va_list, ...);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __vcrt_va_list_is_reference {
    pub _address: u8,
}
pub const __vcrt_va_list_is_reference___the_value: __vcrt_va_list_is_reference__bindgen_ty_1 =
    false;
pub type __vcrt_va_list_is_reference__bindgen_ty_1 = bool;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __vcrt_assert_va_start_is_not_reference {
    pub _address: u8,
}
pub type __vcrt_bool = bool;
unsafe extern "C" {
    pub fn __security_init_cookie();
}
unsafe extern "C" {
    pub fn __security_check_cookie(_StackCookie: usize);
}
unsafe extern "C" {
    pub fn __report_gsfailure(_StackCookie: usize) -> !;
}
unsafe extern "C" {
    pub static mut __security_cookie: usize;
}
pub type __crt_bool = bool;
unsafe extern "C" {
    pub fn _invalid_parameter_noinfo();
}
unsafe extern "C" {
    pub fn _invalid_parameter_noinfo_noreturn() -> !;
}
unsafe extern "C" {
    pub fn _invoke_watson(
        _Expression: *const u16,
        _FunctionName: *const u16,
        _FileName: *const u16,
        _LineNo: ::std::os::raw::c_uint,
        _Reserved: usize,
    ) -> !;
}
pub type errno_t = ::std::os::raw::c_int;
pub type wint_t = ::std::os::raw::c_ushort;
pub type wctype_t = ::std::os::raw::c_ushort;
pub type __time32_t = ::std::os::raw::c_long;
pub type __time64_t = ::std::os::raw::c_longlong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __crt_locale_data_public {
    pub _locale_pctype: *const ::std::os::raw::c_ushort,
    pub _locale_mb_cur_max: ::std::os::raw::c_int,
    pub _locale_lc_codepage: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __crt_locale_data_public"]
        [::std::mem::size_of::<__crt_locale_data_public>() - 16usize];
    ["Alignment of __crt_locale_data_public"]
        [::std::mem::align_of::<__crt_locale_data_public>() - 8usize];
    ["Offset of field: __crt_locale_data_public::_locale_pctype"]
        [::std::mem::offset_of!(__crt_locale_data_public, _locale_pctype) - 0usize];
    ["Offset of field: __crt_locale_data_public::_locale_mb_cur_max"]
        [::std::mem::offset_of!(__crt_locale_data_public, _locale_mb_cur_max) - 8usize];
    ["Offset of field: __crt_locale_data_public::_locale_lc_codepage"]
        [::std::mem::offset_of!(__crt_locale_data_public, _locale_lc_codepage) - 12usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __crt_locale_pointers {
    pub locinfo: *mut __crt_locale_data,
    pub mbcinfo: *mut __crt_multibyte_data,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __crt_locale_pointers"][::std::mem::size_of::<__crt_locale_pointers>() - 16usize];
    ["Alignment of __crt_locale_pointers"]
        [::std::mem::align_of::<__crt_locale_pointers>() - 8usize];
    ["Offset of field: __crt_locale_pointers::locinfo"]
        [::std::mem::offset_of!(__crt_locale_pointers, locinfo) - 0usize];
    ["Offset of field: __crt_locale_pointers::mbcinfo"]
        [::std::mem::offset_of!(__crt_locale_pointers, mbcinfo) - 8usize];
};
pub type _locale_t = *mut __crt_locale_pointers;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _Mbstatet {
    pub _Wchar: ::std::os::raw::c_ulong,
    pub _Byte: ::std::os::raw::c_ushort,
    pub _State: ::std::os::raw::c_ushort,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _Mbstatet"][::std::mem::size_of::<_Mbstatet>() - 8usize];
    ["Alignment of _Mbstatet"][::std::mem::align_of::<_Mbstatet>() - 4usize];
    ["Offset of field: _Mbstatet::_Wchar"][::std::mem::offset_of!(_Mbstatet, _Wchar) - 0usize];
    ["Offset of field: _Mbstatet::_Byte"][::std::mem::offset_of!(_Mbstatet, _Byte) - 4usize];
    ["Offset of field: _Mbstatet::_State"][::std::mem::offset_of!(_Mbstatet, _State) - 6usize];
};
pub type mbstate_t = _Mbstatet;
pub type time_t = __time64_t;
pub type rsize_t = usize;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _iobuf {
    pub _Placeholder: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _iobuf"][::std::mem::size_of::<_iobuf>() - 8usize];
    ["Alignment of _iobuf"][::std::mem::align_of::<_iobuf>() - 8usize];
    ["Offset of field: _iobuf::_Placeholder"]
        [::std::mem::offset_of!(_iobuf, _Placeholder) - 0usize];
};
pub type FILE = _iobuf;
unsafe extern "C" {
    pub fn __acrt_iob_func(_Ix: ::std::os::raw::c_uint) -> *mut FILE;
}
unsafe extern "C" {
    pub fn fgetwc(_Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn _fgetwchar() -> wint_t;
}
unsafe extern "C" {
    pub fn fputwc(_Character: u16, _Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn _fputwchar(_Character: u16) -> wint_t;
}
unsafe extern "C" {
    pub fn getwc(_Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn getwchar() -> wint_t;
}
unsafe extern "C" {
    pub fn fgetws(
        _Buffer: *mut u16,
        _BufferCount: ::std::os::raw::c_int,
        _Stream: *mut FILE,
    ) -> *mut u16;
}
unsafe extern "C" {
    pub fn fputws(_Buffer: *const u16, _Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _getws_s(_Buffer: *mut u16, _BufferCount: usize) -> *mut u16;
}
unsafe extern "C" {
    pub fn putwc(_Character: u16, _Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn putwchar(_Character: u16) -> wint_t;
}
unsafe extern "C" {
    pub fn _putws(_Buffer: *const u16) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ungetwc(_Character: wint_t, _Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn _wfdopen(_FileHandle: ::std::os::raw::c_int, _Mode: *const u16) -> *mut FILE;
}
unsafe extern "C" {
    pub fn _wfopen(_FileName: *const u16, _Mode: *const u16) -> *mut FILE;
}
unsafe extern "C" {
    pub fn _wfopen_s(_Stream: *mut *mut FILE, _FileName: *const u16, _Mode: *const u16) -> errno_t;
}
unsafe extern "C" {
    pub fn _wfreopen(_FileName: *const u16, _Mode: *const u16, _OldStream: *mut FILE) -> *mut FILE;
}
unsafe extern "C" {
    pub fn _wfreopen_s(
        _Stream: *mut *mut FILE,
        _FileName: *const u16,
        _Mode: *const u16,
        _OldStream: *mut FILE,
    ) -> errno_t;
}
unsafe extern "C" {
    pub fn _wfsopen(
        _FileName: *const u16,
        _Mode: *const u16,
        _ShFlag: ::std::os::raw::c_int,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn _wperror(_ErrorMessage: *const u16);
}
unsafe extern "C" {
    pub fn _wpopen(_Command: *const u16, _Mode: *const u16) -> *mut FILE;
}
unsafe extern "C" {
    pub fn _wremove(_FileName: *const u16) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _wtempnam(_Directory: *const u16, _FilePrefix: *const u16) -> *mut u16;
}
unsafe extern "C" {
    pub fn _wtmpnam_s(_Buffer: *mut u16, _BufferCount: usize) -> errno_t;
}
unsafe extern "C" {
    pub fn _wtmpnam(_Buffer: *mut u16) -> *mut u16;
}
unsafe extern "C" {
    pub fn _fgetwc_nolock(_Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn _fputwc_nolock(_Character: u16, _Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn _getwc_nolock(_Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn _putwc_nolock(_Character: u16, _Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn _ungetwc_nolock(_Character: wint_t, _Stream: *mut FILE) -> wint_t;
}
unsafe extern "C" {
    pub fn __stdio_common_vfwprintf(
        _Options: ::std::os::raw::c_ulonglong,
        _Stream: *mut FILE,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vfwprintf_s(
        _Options: ::std::os::raw::c_ulonglong,
        _Stream: *mut FILE,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vfwprintf_p(
        _Options: ::std::os::raw::c_ulonglong,
        _Stream: *mut FILE,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vfwscanf(
        _Options: ::std::os::raw::c_ulonglong,
        _Stream: *mut FILE,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vswprintf(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *mut u16,
        _BufferCount: usize,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vswprintf_s(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *mut u16,
        _BufferCount: usize,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vsnwprintf_s(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *mut u16,
        _BufferCount: usize,
        _MaxCount: usize,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vswprintf_p(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *mut u16,
        _BufferCount: usize,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vswscanf(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *const u16,
        _BufferCount: usize,
        _Format: *const u16,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
pub type fpos_t = ::std::os::raw::c_longlong;
unsafe extern "C" {
    pub fn _get_stream_buffer_pointers(
        _Stream: *mut FILE,
        _Base: *mut *mut *mut ::std::os::raw::c_char,
        _Pointer: *mut *mut *mut ::std::os::raw::c_char,
        _Count: *mut *mut ::std::os::raw::c_int,
    ) -> errno_t;
}
unsafe extern "C" {
    pub fn clearerr_s(_Stream: *mut FILE) -> errno_t;
}
unsafe extern "C" {
    pub fn fopen_s(
        _Stream: *mut *mut FILE,
        _FileName: *const ::std::os::raw::c_char,
        _Mode: *const ::std::os::raw::c_char,
    ) -> errno_t;
}
unsafe extern "C" {
    pub fn fread_s(
        _Buffer: *mut ::std::os::raw::c_void,
        _BufferSize: usize,
        _ElementSize: usize,
        _ElementCount: usize,
        _Stream: *mut FILE,
    ) -> usize;
}
unsafe extern "C" {
    pub fn freopen_s(
        _Stream: *mut *mut FILE,
        _FileName: *const ::std::os::raw::c_char,
        _Mode: *const ::std::os::raw::c_char,
        _OldStream: *mut FILE,
    ) -> errno_t;
}
unsafe extern "C" {
    pub fn gets_s(
        _Buffer: *mut ::std::os::raw::c_char,
        _Size: rsize_t,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn tmpfile_s(_Stream: *mut *mut FILE) -> errno_t;
}
unsafe extern "C" {
    pub fn tmpnam_s(_Buffer: *mut ::std::os::raw::c_char, _Size: rsize_t) -> errno_t;
}
unsafe extern "C" {
    pub fn clearerr(_Stream: *mut FILE);
}
unsafe extern "C" {
    pub fn fclose(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fcloseall() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fdopen(
        _FileHandle: ::std::os::raw::c_int,
        _Mode: *const ::std::os::raw::c_char,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn feof(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ferror(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fflush(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fgetc(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fgetchar() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fgetpos(_Stream: *mut FILE, _Position: *mut fpos_t) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fgets(
        _Buffer: *mut ::std::os::raw::c_char,
        _MaxCount: ::std::os::raw::c_int,
        _Stream: *mut FILE,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn _fileno(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _flushall() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fopen(
        _FileName: *const ::std::os::raw::c_char,
        _Mode: *const ::std::os::raw::c_char,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn fputc(_Character: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fputchar(_Character: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fputs(
        _Buffer: *const ::std::os::raw::c_char,
        _Stream: *mut FILE,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fread(
        _Buffer: *mut ::std::os::raw::c_void,
        _ElementSize: usize,
        _ElementCount: usize,
        _Stream: *mut FILE,
    ) -> usize;
}
unsafe extern "C" {
    pub fn freopen(
        _FileName: *const ::std::os::raw::c_char,
        _Mode: *const ::std::os::raw::c_char,
        _Stream: *mut FILE,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn _fsopen(
        _FileName: *const ::std::os::raw::c_char,
        _Mode: *const ::std::os::raw::c_char,
        _ShFlag: ::std::os::raw::c_int,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn fsetpos(_Stream: *mut FILE, _Position: *const fpos_t) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fseek(
        _Stream: *mut FILE,
        _Offset: ::std::os::raw::c_long,
        _Origin: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fseeki64(
        _Stream: *mut FILE,
        _Offset: ::std::os::raw::c_longlong,
        _Origin: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn ftell(_Stream: *mut FILE) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn _ftelli64(_Stream: *mut FILE) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn fwrite(
        _Buffer: *const ::std::os::raw::c_void,
        _ElementSize: usize,
        _ElementCount: usize,
        _Stream: *mut FILE,
    ) -> usize;
}
unsafe extern "C" {
    pub fn getc(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getchar() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _getmaxstdio() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _getw(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn perror(_ErrorMessage: *const ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub fn _pclose(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _popen(
        _Command: *const ::std::os::raw::c_char,
        _Mode: *const ::std::os::raw::c_char,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn putc(_Character: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn putchar(_Character: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn puts(_Buffer: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _putw(_Word: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn remove(_FileName: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn rename(
        _OldFileName: *const ::std::os::raw::c_char,
        _NewFileName: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _unlink(_FileName: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn unlink(_FileName: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn rewind(_Stream: *mut FILE);
}
unsafe extern "C" {
    pub fn _rmtmp() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn setbuf(_Stream: *mut FILE, _Buffer: *mut ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub fn _setmaxstdio(_Maximum: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn setvbuf(
        _Stream: *mut FILE,
        _Buffer: *mut ::std::os::raw::c_char,
        _Mode: ::std::os::raw::c_int,
        _Size: usize,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _tempnam(
        _DirectoryName: *const ::std::os::raw::c_char,
        _FilePrefix: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn tmpfile() -> *mut FILE;
}
unsafe extern "C" {
    pub fn tmpnam(_Buffer: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn ungetc(_Character: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _lock_file(_Stream: *mut FILE);
}
unsafe extern "C" {
    pub fn _unlock_file(_Stream: *mut FILE);
}
unsafe extern "C" {
    pub fn _fclose_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fflush_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fgetc_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fputc_nolock(
        _Character: ::std::os::raw::c_int,
        _Stream: *mut FILE,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fread_nolock(
        _Buffer: *mut ::std::os::raw::c_void,
        _ElementSize: usize,
        _ElementCount: usize,
        _Stream: *mut FILE,
    ) -> usize;
}
unsafe extern "C" {
    pub fn _fread_nolock_s(
        _Buffer: *mut ::std::os::raw::c_void,
        _BufferSize: usize,
        _ElementSize: usize,
        _ElementCount: usize,
        _Stream: *mut FILE,
    ) -> usize;
}
unsafe extern "C" {
    pub fn _fseek_nolock(
        _Stream: *mut FILE,
        _Offset: ::std::os::raw::c_long,
        _Origin: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _fseeki64_nolock(
        _Stream: *mut FILE,
        _Offset: ::std::os::raw::c_longlong,
        _Origin: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _ftell_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_long;
}
unsafe extern "C" {
    pub fn _ftelli64_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_longlong;
}
unsafe extern "C" {
    pub fn _fwrite_nolock(
        _Buffer: *const ::std::os::raw::c_void,
        _ElementSize: usize,
        _ElementCount: usize,
        _Stream: *mut FILE,
    ) -> usize;
}
unsafe extern "C" {
    pub fn _getc_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _putc_nolock(
        _Character: ::std::os::raw::c_int,
        _Stream: *mut FILE,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _ungetc_nolock(
        _Character: ::std::os::raw::c_int,
        _Stream: *mut FILE,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __p__commode() -> *mut ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vfprintf(
        _Options: ::std::os::raw::c_ulonglong,
        _Stream: *mut FILE,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vfprintf_s(
        _Options: ::std::os::raw::c_ulonglong,
        _Stream: *mut FILE,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vfprintf_p(
        _Options: ::std::os::raw::c_ulonglong,
        _Stream: *mut FILE,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _set_printf_count_output(_Value: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn _get_printf_count_output() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vfscanf(
        _Options: ::std::os::raw::c_ulonglong,
        _Stream: *mut FILE,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _Arglist: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vsprintf(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *mut ::std::os::raw::c_char,
        _BufferCount: usize,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vsprintf_s(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *mut ::std::os::raw::c_char,
        _BufferCount: usize,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vsnprintf_s(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *mut ::std::os::raw::c_char,
        _BufferCount: usize,
        _MaxCount: usize,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vsprintf_p(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *mut ::std::os::raw::c_char,
        _BufferCount: usize,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn __stdio_common_vsscanf(
        _Options: ::std::os::raw::c_ulonglong,
        _Buffer: *const ::std::os::raw::c_char,
        _BufferCount: usize,
        _Format: *const ::std::os::raw::c_char,
        _Locale: _locale_t,
        _ArgList: va_list,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn tempnam(
        _Directory: *const ::std::os::raw::c_char,
        _FilePrefix: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn fcloseall() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fdopen(
        _FileHandle: ::std::os::raw::c_int,
        _Format: *const ::std::os::raw::c_char,
    ) -> *mut FILE;
}
unsafe extern "C" {
    pub fn fgetchar() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fileno(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn flushall() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn fputchar(_Ch: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn getw(_Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn putw(_Ch: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn rmtmp() -> ::std::os::raw::c_int;
}
pub type __gnuc_va_list = __builtin_va_list;
pub type jint = ::std::os::raw::c_long;
pub type jlong = ::std::os::raw::c_longlong;
pub type jbyte = ::std::os::raw::c_schar;
pub type jboolean = ::std::os::raw::c_uchar;
pub type jchar = ::std::os::raw::c_ushort;
pub type jshort = ::std::os::raw::c_short;
pub type jfloat = f32;
pub type jdouble = f64;
pub type jsize = jint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jobject {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jobject"][::std::mem::size_of::<_jobject>() - 1usize];
    ["Alignment of _jobject"][::std::mem::align_of::<_jobject>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jclass {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jclass"][::std::mem::size_of::<_jclass>() - 1usize];
    ["Alignment of _jclass"][::std::mem::align_of::<_jclass>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jthrowable {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jthrowable"][::std::mem::size_of::<_jthrowable>() - 1usize];
    ["Alignment of _jthrowable"][::std::mem::align_of::<_jthrowable>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jstring {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jstring"][::std::mem::size_of::<_jstring>() - 1usize];
    ["Alignment of _jstring"][::std::mem::align_of::<_jstring>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jarray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jarray"][::std::mem::size_of::<_jarray>() - 1usize];
    ["Alignment of _jarray"][::std::mem::align_of::<_jarray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jbooleanArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jbooleanArray"][::std::mem::size_of::<_jbooleanArray>() - 1usize];
    ["Alignment of _jbooleanArray"][::std::mem::align_of::<_jbooleanArray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jbyteArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jbyteArray"][::std::mem::size_of::<_jbyteArray>() - 1usize];
    ["Alignment of _jbyteArray"][::std::mem::align_of::<_jbyteArray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jcharArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jcharArray"][::std::mem::size_of::<_jcharArray>() - 1usize];
    ["Alignment of _jcharArray"][::std::mem::align_of::<_jcharArray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jshortArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jshortArray"][::std::mem::size_of::<_jshortArray>() - 1usize];
    ["Alignment of _jshortArray"][::std::mem::align_of::<_jshortArray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jintArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jintArray"][::std::mem::size_of::<_jintArray>() - 1usize];
    ["Alignment of _jintArray"][::std::mem::align_of::<_jintArray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jlongArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jlongArray"][::std::mem::size_of::<_jlongArray>() - 1usize];
    ["Alignment of _jlongArray"][::std::mem::align_of::<_jlongArray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jfloatArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jfloatArray"][::std::mem::size_of::<_jfloatArray>() - 1usize];
    ["Alignment of _jfloatArray"][::std::mem::align_of::<_jfloatArray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jdoubleArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jdoubleArray"][::std::mem::size_of::<_jdoubleArray>() - 1usize];
    ["Alignment of _jdoubleArray"][::std::mem::align_of::<_jdoubleArray>() - 1usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jobjectArray {
    pub _address: u8,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _jobjectArray"][::std::mem::size_of::<_jobjectArray>() - 1usize];
    ["Alignment of _jobjectArray"][::std::mem::align_of::<_jobjectArray>() - 1usize];
};
pub type jobject = *mut _jobject;
pub type jclass = *mut _jclass;
pub type jthrowable = *mut _jthrowable;
pub type jstring = *mut _jstring;
pub type jarray = *mut _jarray;
pub type jbooleanArray = *mut _jbooleanArray;
pub type jbyteArray = *mut _jbyteArray;
pub type jcharArray = *mut _jcharArray;
pub type jshortArray = *mut _jshortArray;
pub type jintArray = *mut _jintArray;
pub type jlongArray = *mut _jlongArray;
pub type jfloatArray = *mut _jfloatArray;
pub type jdoubleArray = *mut _jdoubleArray;
pub type jobjectArray = *mut _jobjectArray;
pub type jweak = jobject;
#[repr(C)]
#[derive(Copy, Clone)]
pub union jvalue {
    pub z: jboolean,
    pub b: jbyte,
    pub c: jchar,
    pub s: jshort,
    pub i: jint,
    pub j: jlong,
    pub f: jfloat,
    pub d: jdouble,
    pub l: jobject,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of jvalue"][::std::mem::size_of::<jvalue>() - 8usize];
    ["Alignment of jvalue"][::std::mem::align_of::<jvalue>() - 8usize];
    ["Offset of field: jvalue::z"][::std::mem::offset_of!(jvalue, z) - 0usize];
    ["Offset of field: jvalue::b"][::std::mem::offset_of!(jvalue, b) - 0usize];
    ["Offset of field: jvalue::c"][::std::mem::offset_of!(jvalue, c) - 0usize];
    ["Offset of field: jvalue::s"][::std::mem::offset_of!(jvalue, s) - 0usize];
    ["Offset of field: jvalue::i"][::std::mem::offset_of!(jvalue, i) - 0usize];
    ["Offset of field: jvalue::j"][::std::mem::offset_of!(jvalue, j) - 0usize];
    ["Offset of field: jvalue::f"][::std::mem::offset_of!(jvalue, f) - 0usize];
    ["Offset of field: jvalue::d"][::std::mem::offset_of!(jvalue, d) - 0usize];
    ["Offset of field: jvalue::l"][::std::mem::offset_of!(jvalue, l) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jfieldID {
    _unused: [u8; 0],
}
pub type jfieldID = *mut _jfieldID;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _jmethodID {
    _unused: [u8; 0],
}
pub type jmethodID = *mut _jmethodID;
pub const _jobjectType_JNIInvalidRefType: _jobjectType = 0;
pub const _jobjectType_JNILocalRefType: _jobjectType = 1;
pub const _jobjectType_JNIGlobalRefType: _jobjectType = 2;
pub const _jobjectType_JNIWeakGlobalRefType: _jobjectType = 3;
pub type _jobjectType = ::std::os::raw::c_int;
pub use self::_jobjectType as jobjectRefType;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JNINativeMethod {
    pub name: *mut ::std::os::raw::c_char,
    pub signature: *mut ::std::os::raw::c_char,
    pub fnPtr: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of JNINativeMethod"][::std::mem::size_of::<JNINativeMethod>() - 24usize];
    ["Alignment of JNINativeMethod"][::std::mem::align_of::<JNINativeMethod>() - 8usize];
    ["Offset of field: JNINativeMethod::name"]
        [::std::mem::offset_of!(JNINativeMethod, name) - 0usize];
    ["Offset of field: JNINativeMethod::signature"]
        [::std::mem::offset_of!(JNINativeMethod, signature) - 8usize];
    ["Offset of field: JNINativeMethod::fnPtr"]
        [::std::mem::offset_of!(JNINativeMethod, fnPtr) - 16usize];
};
pub type JNIEnv = JNIEnv_;
pub type JavaVM = JavaVM_;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JNINativeInterface_ {
    pub reserved0: *mut ::std::os::raw::c_void,
    pub reserved1: *mut ::std::os::raw::c_void,
    pub reserved2: *mut ::std::os::raw::c_void,
    pub reserved3: *mut ::std::os::raw::c_void,
    pub GetVersion: ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jint>,
    pub DefineClass: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            name: *const ::std::os::raw::c_char,
            loader: jobject,
            buf: *const jbyte,
            len: jsize,
        ) -> jclass,
    >,
    pub FindClass: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, name: *const ::std::os::raw::c_char) -> jclass,
    >,
    pub FromReflectedMethod:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, method: jobject) -> jmethodID>,
    pub FromReflectedField:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, field: jobject) -> jfieldID>,
    pub ToReflectedMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            cls: jclass,
            methodID: jmethodID,
            isStatic: jboolean,
        ) -> jobject,
    >,
    pub GetSuperclass:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, sub: jclass) -> jclass>,
    pub IsAssignableFrom: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, sub: jclass, sup: jclass) -> jboolean,
    >,
    pub ToReflectedField: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            cls: jclass,
            fieldID: jfieldID,
            isStatic: jboolean,
        ) -> jobject,
    >,
    pub Throw:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jthrowable) -> jint>,
    pub ThrowNew: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            msg: *const ::std::os::raw::c_char,
        ) -> jint,
    >,
    pub ExceptionOccurred:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jthrowable>,
    pub ExceptionDescribe: ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv)>,
    pub ExceptionClear: ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv)>,
    pub FatalError: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, msg: *const ::std::os::raw::c_char),
    >,
    pub PushLocalFrame:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, capacity: jint) -> jint>,
    pub PopLocalFrame:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, result: jobject) -> jobject>,
    pub NewGlobalRef:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, lobj: jobject) -> jobject>,
    pub DeleteGlobalRef:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, gref: jobject)>,
    pub DeleteLocalRef: ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject)>,
    pub IsSameObject: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj1: jobject, obj2: jobject) -> jboolean,
    >,
    pub NewLocalRef:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, ref_: jobject) -> jobject>,
    pub EnsureLocalCapacity:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, capacity: jint) -> jint>,
    pub AllocObject:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass) -> jobject>,
    pub NewObject: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jobject,
    >,
    pub NewObjectV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jobject,
    >,
    pub NewObjectA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jobject,
    >,
    pub GetObjectClass:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject) -> jclass>,
    pub IsInstanceOf: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, clazz: jclass) -> jboolean,
    >,
    pub GetMethodID: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            name: *const ::std::os::raw::c_char,
            sig: *const ::std::os::raw::c_char,
        ) -> jmethodID,
    >,
    pub CallObjectMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jobject,
    >,
    pub CallObjectMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jobject,
    >,
    pub CallObjectMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jobject,
    >,
    pub CallBooleanMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jboolean,
    >,
    pub CallBooleanMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jboolean,
    >,
    pub CallBooleanMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jboolean,
    >,
    pub CallByteMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jbyte,
    >,
    pub CallByteMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jbyte,
    >,
    pub CallByteMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jbyte,
    >,
    pub CallCharMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jchar,
    >,
    pub CallCharMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jchar,
    >,
    pub CallCharMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jchar,
    >,
    pub CallShortMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jshort,
    >,
    pub CallShortMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jshort,
    >,
    pub CallShortMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jshort,
    >,
    pub CallIntMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jint,
    >,
    pub CallIntMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jint,
    >,
    pub CallIntMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jint,
    >,
    pub CallLongMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jlong,
    >,
    pub CallLongMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jlong,
    >,
    pub CallLongMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jlong,
    >,
    pub CallFloatMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jfloat,
    >,
    pub CallFloatMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jfloat,
    >,
    pub CallFloatMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jfloat,
    >,
    pub CallDoubleMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...) -> jdouble,
    >,
    pub CallDoubleMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: va_list,
        ) -> jdouble,
    >,
    pub CallDoubleMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jdouble,
    >,
    pub CallVoidMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, ...),
    >,
    pub CallVoidMethodV: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, methodID: jmethodID, args: va_list),
    >,
    pub CallVoidMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            methodID: jmethodID,
            args: *const jvalue,
        ),
    >,
    pub CallNonvirtualObjectMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jobject,
    >,
    pub CallNonvirtualObjectMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jobject,
    >,
    pub CallNonvirtualObjectMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jobject,
    >,
    pub CallNonvirtualBooleanMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jboolean,
    >,
    pub CallNonvirtualBooleanMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jboolean,
    >,
    pub CallNonvirtualBooleanMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jboolean,
    >,
    pub CallNonvirtualByteMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jbyte,
    >,
    pub CallNonvirtualByteMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jbyte,
    >,
    pub CallNonvirtualByteMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jbyte,
    >,
    pub CallNonvirtualCharMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jchar,
    >,
    pub CallNonvirtualCharMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jchar,
    >,
    pub CallNonvirtualCharMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jchar,
    >,
    pub CallNonvirtualShortMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jshort,
    >,
    pub CallNonvirtualShortMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jshort,
    >,
    pub CallNonvirtualShortMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jshort,
    >,
    pub CallNonvirtualIntMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jint,
    >,
    pub CallNonvirtualIntMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jint,
    >,
    pub CallNonvirtualIntMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jint,
    >,
    pub CallNonvirtualLongMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jlong,
    >,
    pub CallNonvirtualLongMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jlong,
    >,
    pub CallNonvirtualLongMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jlong,
    >,
    pub CallNonvirtualFloatMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jfloat,
    >,
    pub CallNonvirtualFloatMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jfloat,
    >,
    pub CallNonvirtualFloatMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jfloat,
    >,
    pub CallNonvirtualDoubleMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ) -> jdouble,
    >,
    pub CallNonvirtualDoubleMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jdouble,
    >,
    pub CallNonvirtualDoubleMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jdouble,
    >,
    pub CallNonvirtualVoidMethod: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            ...
        ),
    >,
    pub CallNonvirtualVoidMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ),
    >,
    pub CallNonvirtualVoidMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            obj: jobject,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ),
    >,
    pub GetFieldID: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            name: *const ::std::os::raw::c_char,
            sig: *const ::std::os::raw::c_char,
        ) -> jfieldID,
    >,
    pub GetObjectField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jobject,
    >,
    pub GetBooleanField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jboolean,
    >,
    pub GetByteField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jbyte,
    >,
    pub GetCharField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jchar,
    >,
    pub GetShortField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jshort,
    >,
    pub GetIntField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jint,
    >,
    pub GetLongField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jlong,
    >,
    pub GetFloatField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jfloat,
    >,
    pub GetDoubleField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID) -> jdouble,
    >,
    pub SetObjectField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jobject),
    >,
    pub SetBooleanField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jboolean),
    >,
    pub SetByteField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jbyte),
    >,
    pub SetCharField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jchar),
    >,
    pub SetShortField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jshort),
    >,
    pub SetIntField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jint),
    >,
    pub SetLongField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jlong),
    >,
    pub SetFloatField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jfloat),
    >,
    pub SetDoubleField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject, fieldID: jfieldID, val: jdouble),
    >,
    pub GetStaticMethodID: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            name: *const ::std::os::raw::c_char,
            sig: *const ::std::os::raw::c_char,
        ) -> jmethodID,
    >,
    pub CallStaticObjectMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jobject,
    >,
    pub CallStaticObjectMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jobject,
    >,
    pub CallStaticObjectMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jobject,
    >,
    pub CallStaticBooleanMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jboolean,
    >,
    pub CallStaticBooleanMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jboolean,
    >,
    pub CallStaticBooleanMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jboolean,
    >,
    pub CallStaticByteMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jbyte,
    >,
    pub CallStaticByteMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jbyte,
    >,
    pub CallStaticByteMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jbyte,
    >,
    pub CallStaticCharMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jchar,
    >,
    pub CallStaticCharMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jchar,
    >,
    pub CallStaticCharMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jchar,
    >,
    pub CallStaticShortMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jshort,
    >,
    pub CallStaticShortMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jshort,
    >,
    pub CallStaticShortMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jshort,
    >,
    pub CallStaticIntMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jint,
    >,
    pub CallStaticIntMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jint,
    >,
    pub CallStaticIntMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jint,
    >,
    pub CallStaticLongMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jlong,
    >,
    pub CallStaticLongMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jlong,
    >,
    pub CallStaticLongMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jlong,
    >,
    pub CallStaticFloatMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jfloat,
    >,
    pub CallStaticFloatMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jfloat,
    >,
    pub CallStaticFloatMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jfloat,
    >,
    pub CallStaticDoubleMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, methodID: jmethodID, ...) -> jdouble,
    >,
    pub CallStaticDoubleMethodV: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: va_list,
        ) -> jdouble,
    >,
    pub CallStaticDoubleMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ) -> jdouble,
    >,
    pub CallStaticVoidMethod: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, cls: jclass, methodID: jmethodID, ...),
    >,
    pub CallStaticVoidMethodV: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, cls: jclass, methodID: jmethodID, args: va_list),
    >,
    pub CallStaticVoidMethodA: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            cls: jclass,
            methodID: jmethodID,
            args: *const jvalue,
        ),
    >,
    pub GetStaticFieldID: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            name: *const ::std::os::raw::c_char,
            sig: *const ::std::os::raw::c_char,
        ) -> jfieldID,
    >,
    pub GetStaticObjectField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jobject,
    >,
    pub GetStaticBooleanField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jboolean,
    >,
    pub GetStaticByteField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jbyte,
    >,
    pub GetStaticCharField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jchar,
    >,
    pub GetStaticShortField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jshort,
    >,
    pub GetStaticIntField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jint,
    >,
    pub GetStaticLongField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jlong,
    >,
    pub GetStaticFloatField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jfloat,
    >,
    pub GetStaticDoubleField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID) -> jdouble,
    >,
    pub SetStaticObjectField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jobject),
    >,
    pub SetStaticBooleanField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jboolean),
    >,
    pub SetStaticByteField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jbyte),
    >,
    pub SetStaticCharField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jchar),
    >,
    pub SetStaticShortField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jshort),
    >,
    pub SetStaticIntField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jint),
    >,
    pub SetStaticLongField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jlong),
    >,
    pub SetStaticFloatField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jfloat),
    >,
    pub SetStaticDoubleField: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass, fieldID: jfieldID, value: jdouble),
    >,
    pub NewString: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, unicode: *const jchar, len: jsize) -> jstring,
    >,
    pub GetStringLength:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, str_: jstring) -> jsize>,
    pub GetStringChars: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            str_: jstring,
            isCopy: *mut jboolean,
        ) -> *const jchar,
    >,
    pub ReleaseStringChars: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, str_: jstring, chars: *const jchar),
    >,
    pub NewStringUTF: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, utf: *const ::std::os::raw::c_char) -> jstring,
    >,
    pub GetStringUTFLength:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, str_: jstring) -> jsize>,
    pub GetStringUTFChars: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            str_: jstring,
            isCopy: *mut jboolean,
        ) -> *const ::std::os::raw::c_char,
    >,
    pub ReleaseStringUTFChars: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, str_: jstring, chars: *const ::std::os::raw::c_char),
    >,
    pub GetArrayLength:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, array: jarray) -> jsize>,
    pub NewObjectArray: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            len: jsize,
            clazz: jclass,
            init: jobject,
        ) -> jobjectArray,
    >,
    pub GetObjectArrayElement: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, array: jobjectArray, index: jsize) -> jobject,
    >,
    pub SetObjectArrayElement: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, array: jobjectArray, index: jsize, val: jobject),
    >,
    pub NewBooleanArray:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, len: jsize) -> jbooleanArray>,
    pub NewByteArray:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, len: jsize) -> jbyteArray>,
    pub NewCharArray:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, len: jsize) -> jcharArray>,
    pub NewShortArray:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, len: jsize) -> jshortArray>,
    pub NewIntArray:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, len: jsize) -> jintArray>,
    pub NewLongArray:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, len: jsize) -> jlongArray>,
    pub NewFloatArray:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, len: jsize) -> jfloatArray>,
    pub NewDoubleArray:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, len: jsize) -> jdoubleArray>,
    pub GetBooleanArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jbooleanArray,
            isCopy: *mut jboolean,
        ) -> *mut jboolean,
    >,
    pub GetByteArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jbyteArray,
            isCopy: *mut jboolean,
        ) -> *mut jbyte,
    >,
    pub GetCharArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jcharArray,
            isCopy: *mut jboolean,
        ) -> *mut jchar,
    >,
    pub GetShortArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jshortArray,
            isCopy: *mut jboolean,
        ) -> *mut jshort,
    >,
    pub GetIntArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jintArray,
            isCopy: *mut jboolean,
        ) -> *mut jint,
    >,
    pub GetLongArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jlongArray,
            isCopy: *mut jboolean,
        ) -> *mut jlong,
    >,
    pub GetFloatArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jfloatArray,
            isCopy: *mut jboolean,
        ) -> *mut jfloat,
    >,
    pub GetDoubleArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jdoubleArray,
            isCopy: *mut jboolean,
        ) -> *mut jdouble,
    >,
    pub ReleaseBooleanArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jbooleanArray,
            elems: *mut jboolean,
            mode: jint,
        ),
    >,
    pub ReleaseByteArrayElements: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, array: jbyteArray, elems: *mut jbyte, mode: jint),
    >,
    pub ReleaseCharArrayElements: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, array: jcharArray, elems: *mut jchar, mode: jint),
    >,
    pub ReleaseShortArrayElements: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, array: jshortArray, elems: *mut jshort, mode: jint),
    >,
    pub ReleaseIntArrayElements: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, array: jintArray, elems: *mut jint, mode: jint),
    >,
    pub ReleaseLongArrayElements: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, array: jlongArray, elems: *mut jlong, mode: jint),
    >,
    pub ReleaseFloatArrayElements: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, array: jfloatArray, elems: *mut jfloat, mode: jint),
    >,
    pub ReleaseDoubleArrayElements: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jdoubleArray,
            elems: *mut jdouble,
            mode: jint,
        ),
    >,
    pub GetBooleanArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jbooleanArray,
            start: jsize,
            l: jsize,
            buf: *mut jboolean,
        ),
    >,
    pub GetByteArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jbyteArray,
            start: jsize,
            len: jsize,
            buf: *mut jbyte,
        ),
    >,
    pub GetCharArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jcharArray,
            start: jsize,
            len: jsize,
            buf: *mut jchar,
        ),
    >,
    pub GetShortArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jshortArray,
            start: jsize,
            len: jsize,
            buf: *mut jshort,
        ),
    >,
    pub GetIntArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jintArray,
            start: jsize,
            len: jsize,
            buf: *mut jint,
        ),
    >,
    pub GetLongArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jlongArray,
            start: jsize,
            len: jsize,
            buf: *mut jlong,
        ),
    >,
    pub GetFloatArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jfloatArray,
            start: jsize,
            len: jsize,
            buf: *mut jfloat,
        ),
    >,
    pub GetDoubleArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jdoubleArray,
            start: jsize,
            len: jsize,
            buf: *mut jdouble,
        ),
    >,
    pub SetBooleanArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jbooleanArray,
            start: jsize,
            l: jsize,
            buf: *const jboolean,
        ),
    >,
    pub SetByteArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jbyteArray,
            start: jsize,
            len: jsize,
            buf: *const jbyte,
        ),
    >,
    pub SetCharArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jcharArray,
            start: jsize,
            len: jsize,
            buf: *const jchar,
        ),
    >,
    pub SetShortArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jshortArray,
            start: jsize,
            len: jsize,
            buf: *const jshort,
        ),
    >,
    pub SetIntArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jintArray,
            start: jsize,
            len: jsize,
            buf: *const jint,
        ),
    >,
    pub SetLongArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jlongArray,
            start: jsize,
            len: jsize,
            buf: *const jlong,
        ),
    >,
    pub SetFloatArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jfloatArray,
            start: jsize,
            len: jsize,
            buf: *const jfloat,
        ),
    >,
    pub SetDoubleArrayRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jdoubleArray,
            start: jsize,
            len: jsize,
            buf: *const jdouble,
        ),
    >,
    pub RegisterNatives: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            clazz: jclass,
            methods: *const JNINativeMethod,
            nMethods: jint,
        ) -> jint,
    >,
    pub UnregisterNatives:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass) -> jint>,
    pub MonitorEnter:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject) -> jint>,
    pub MonitorExit:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject) -> jint>,
    pub GetJavaVM:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, vm: *mut *mut JavaVM) -> jint>,
    pub GetStringRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            str_: jstring,
            start: jsize,
            len: jsize,
            buf: *mut jchar,
        ),
    >,
    pub GetStringUTFRegion: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            str_: jstring,
            start: jsize,
            len: jsize,
            buf: *mut ::std::os::raw::c_char,
        ),
    >,
    pub GetPrimitiveArrayCritical: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jarray,
            isCopy: *mut jboolean,
        ) -> *mut ::std::os::raw::c_void,
    >,
    pub ReleasePrimitiveArrayCritical: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            array: jarray,
            carray: *mut ::std::os::raw::c_void,
            mode: jint,
        ),
    >,
    pub GetStringCritical: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            string: jstring,
            isCopy: *mut jboolean,
        ) -> *const jchar,
    >,
    pub ReleaseStringCritical: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, string: jstring, cstring: *const jchar),
    >,
    pub NewWeakGlobalRef:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject) -> jweak>,
    pub DeleteWeakGlobalRef:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, ref_: jweak)>,
    pub ExceptionCheck: ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv) -> jboolean>,
    pub NewDirectByteBuffer: ::std::option::Option<
        unsafe extern "C" fn(
            env: *mut JNIEnv,
            address: *mut ::std::os::raw::c_void,
            capacity: jlong,
        ) -> jobject,
    >,
    pub GetDirectBufferAddress: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, buf: jobject) -> *mut ::std::os::raw::c_void,
    >,
    pub GetDirectBufferCapacity:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, buf: jobject) -> jlong>,
    pub GetObjectRefType: ::std::option::Option<
        unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject) -> jobjectRefType,
    >,
    pub GetModule:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, clazz: jclass) -> jobject>,
    pub IsVirtualThread:
        ::std::option::Option<unsafe extern "C" fn(env: *mut JNIEnv, obj: jobject) -> jboolean>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of JNINativeInterface_"][::std::mem::size_of::<JNINativeInterface_>() - 1880usize];
    ["Alignment of JNINativeInterface_"][::std::mem::align_of::<JNINativeInterface_>() - 8usize];
    ["Offset of field: JNINativeInterface_::reserved0"]
        [::std::mem::offset_of!(JNINativeInterface_, reserved0) - 0usize];
    ["Offset of field: JNINativeInterface_::reserved1"]
        [::std::mem::offset_of!(JNINativeInterface_, reserved1) - 8usize];
    ["Offset of field: JNINativeInterface_::reserved2"]
        [::std::mem::offset_of!(JNINativeInterface_, reserved2) - 16usize];
    ["Offset of field: JNINativeInterface_::reserved3"]
        [::std::mem::offset_of!(JNINativeInterface_, reserved3) - 24usize];
    ["Offset of field: JNINativeInterface_::GetVersion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetVersion) - 32usize];
    ["Offset of field: JNINativeInterface_::DefineClass"]
        [::std::mem::offset_of!(JNINativeInterface_, DefineClass) - 40usize];
    ["Offset of field: JNINativeInterface_::FindClass"]
        [::std::mem::offset_of!(JNINativeInterface_, FindClass) - 48usize];
    ["Offset of field: JNINativeInterface_::FromReflectedMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, FromReflectedMethod) - 56usize];
    ["Offset of field: JNINativeInterface_::FromReflectedField"]
        [::std::mem::offset_of!(JNINativeInterface_, FromReflectedField) - 64usize];
    ["Offset of field: JNINativeInterface_::ToReflectedMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, ToReflectedMethod) - 72usize];
    ["Offset of field: JNINativeInterface_::GetSuperclass"]
        [::std::mem::offset_of!(JNINativeInterface_, GetSuperclass) - 80usize];
    ["Offset of field: JNINativeInterface_::IsAssignableFrom"]
        [::std::mem::offset_of!(JNINativeInterface_, IsAssignableFrom) - 88usize];
    ["Offset of field: JNINativeInterface_::ToReflectedField"]
        [::std::mem::offset_of!(JNINativeInterface_, ToReflectedField) - 96usize];
    ["Offset of field: JNINativeInterface_::Throw"]
        [::std::mem::offset_of!(JNINativeInterface_, Throw) - 104usize];
    ["Offset of field: JNINativeInterface_::ThrowNew"]
        [::std::mem::offset_of!(JNINativeInterface_, ThrowNew) - 112usize];
    ["Offset of field: JNINativeInterface_::ExceptionOccurred"]
        [::std::mem::offset_of!(JNINativeInterface_, ExceptionOccurred) - 120usize];
    ["Offset of field: JNINativeInterface_::ExceptionDescribe"]
        [::std::mem::offset_of!(JNINativeInterface_, ExceptionDescribe) - 128usize];
    ["Offset of field: JNINativeInterface_::ExceptionClear"]
        [::std::mem::offset_of!(JNINativeInterface_, ExceptionClear) - 136usize];
    ["Offset of field: JNINativeInterface_::FatalError"]
        [::std::mem::offset_of!(JNINativeInterface_, FatalError) - 144usize];
    ["Offset of field: JNINativeInterface_::PushLocalFrame"]
        [::std::mem::offset_of!(JNINativeInterface_, PushLocalFrame) - 152usize];
    ["Offset of field: JNINativeInterface_::PopLocalFrame"]
        [::std::mem::offset_of!(JNINativeInterface_, PopLocalFrame) - 160usize];
    ["Offset of field: JNINativeInterface_::NewGlobalRef"]
        [::std::mem::offset_of!(JNINativeInterface_, NewGlobalRef) - 168usize];
    ["Offset of field: JNINativeInterface_::DeleteGlobalRef"]
        [::std::mem::offset_of!(JNINativeInterface_, DeleteGlobalRef) - 176usize];
    ["Offset of field: JNINativeInterface_::DeleteLocalRef"]
        [::std::mem::offset_of!(JNINativeInterface_, DeleteLocalRef) - 184usize];
    ["Offset of field: JNINativeInterface_::IsSameObject"]
        [::std::mem::offset_of!(JNINativeInterface_, IsSameObject) - 192usize];
    ["Offset of field: JNINativeInterface_::NewLocalRef"]
        [::std::mem::offset_of!(JNINativeInterface_, NewLocalRef) - 200usize];
    ["Offset of field: JNINativeInterface_::EnsureLocalCapacity"]
        [::std::mem::offset_of!(JNINativeInterface_, EnsureLocalCapacity) - 208usize];
    ["Offset of field: JNINativeInterface_::AllocObject"]
        [::std::mem::offset_of!(JNINativeInterface_, AllocObject) - 216usize];
    ["Offset of field: JNINativeInterface_::NewObject"]
        [::std::mem::offset_of!(JNINativeInterface_, NewObject) - 224usize];
    ["Offset of field: JNINativeInterface_::NewObjectV"]
        [::std::mem::offset_of!(JNINativeInterface_, NewObjectV) - 232usize];
    ["Offset of field: JNINativeInterface_::NewObjectA"]
        [::std::mem::offset_of!(JNINativeInterface_, NewObjectA) - 240usize];
    ["Offset of field: JNINativeInterface_::GetObjectClass"]
        [::std::mem::offset_of!(JNINativeInterface_, GetObjectClass) - 248usize];
    ["Offset of field: JNINativeInterface_::IsInstanceOf"]
        [::std::mem::offset_of!(JNINativeInterface_, IsInstanceOf) - 256usize];
    ["Offset of field: JNINativeInterface_::GetMethodID"]
        [::std::mem::offset_of!(JNINativeInterface_, GetMethodID) - 264usize];
    ["Offset of field: JNINativeInterface_::CallObjectMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallObjectMethod) - 272usize];
    ["Offset of field: JNINativeInterface_::CallObjectMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallObjectMethodV) - 280usize];
    ["Offset of field: JNINativeInterface_::CallObjectMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallObjectMethodA) - 288usize];
    ["Offset of field: JNINativeInterface_::CallBooleanMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallBooleanMethod) - 296usize];
    ["Offset of field: JNINativeInterface_::CallBooleanMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallBooleanMethodV) - 304usize];
    ["Offset of field: JNINativeInterface_::CallBooleanMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallBooleanMethodA) - 312usize];
    ["Offset of field: JNINativeInterface_::CallByteMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallByteMethod) - 320usize];
    ["Offset of field: JNINativeInterface_::CallByteMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallByteMethodV) - 328usize];
    ["Offset of field: JNINativeInterface_::CallByteMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallByteMethodA) - 336usize];
    ["Offset of field: JNINativeInterface_::CallCharMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallCharMethod) - 344usize];
    ["Offset of field: JNINativeInterface_::CallCharMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallCharMethodV) - 352usize];
    ["Offset of field: JNINativeInterface_::CallCharMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallCharMethodA) - 360usize];
    ["Offset of field: JNINativeInterface_::CallShortMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallShortMethod) - 368usize];
    ["Offset of field: JNINativeInterface_::CallShortMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallShortMethodV) - 376usize];
    ["Offset of field: JNINativeInterface_::CallShortMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallShortMethodA) - 384usize];
    ["Offset of field: JNINativeInterface_::CallIntMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallIntMethod) - 392usize];
    ["Offset of field: JNINativeInterface_::CallIntMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallIntMethodV) - 400usize];
    ["Offset of field: JNINativeInterface_::CallIntMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallIntMethodA) - 408usize];
    ["Offset of field: JNINativeInterface_::CallLongMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallLongMethod) - 416usize];
    ["Offset of field: JNINativeInterface_::CallLongMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallLongMethodV) - 424usize];
    ["Offset of field: JNINativeInterface_::CallLongMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallLongMethodA) - 432usize];
    ["Offset of field: JNINativeInterface_::CallFloatMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallFloatMethod) - 440usize];
    ["Offset of field: JNINativeInterface_::CallFloatMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallFloatMethodV) - 448usize];
    ["Offset of field: JNINativeInterface_::CallFloatMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallFloatMethodA) - 456usize];
    ["Offset of field: JNINativeInterface_::CallDoubleMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallDoubleMethod) - 464usize];
    ["Offset of field: JNINativeInterface_::CallDoubleMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallDoubleMethodV) - 472usize];
    ["Offset of field: JNINativeInterface_::CallDoubleMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallDoubleMethodA) - 480usize];
    ["Offset of field: JNINativeInterface_::CallVoidMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallVoidMethod) - 488usize];
    ["Offset of field: JNINativeInterface_::CallVoidMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallVoidMethodV) - 496usize];
    ["Offset of field: JNINativeInterface_::CallVoidMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallVoidMethodA) - 504usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualObjectMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualObjectMethod) - 512usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualObjectMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualObjectMethodV) - 520usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualObjectMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualObjectMethodA) - 528usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualBooleanMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualBooleanMethod) - 536usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualBooleanMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualBooleanMethodV) - 544usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualBooleanMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualBooleanMethodA) - 552usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualByteMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualByteMethod) - 560usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualByteMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualByteMethodV) - 568usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualByteMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualByteMethodA) - 576usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualCharMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualCharMethod) - 584usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualCharMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualCharMethodV) - 592usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualCharMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualCharMethodA) - 600usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualShortMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualShortMethod) - 608usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualShortMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualShortMethodV) - 616usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualShortMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualShortMethodA) - 624usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualIntMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualIntMethod) - 632usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualIntMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualIntMethodV) - 640usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualIntMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualIntMethodA) - 648usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualLongMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualLongMethod) - 656usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualLongMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualLongMethodV) - 664usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualLongMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualLongMethodA) - 672usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualFloatMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualFloatMethod) - 680usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualFloatMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualFloatMethodV) - 688usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualFloatMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualFloatMethodA) - 696usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualDoubleMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualDoubleMethod) - 704usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualDoubleMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualDoubleMethodV) - 712usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualDoubleMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualDoubleMethodA) - 720usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualVoidMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualVoidMethod) - 728usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualVoidMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualVoidMethodV) - 736usize];
    ["Offset of field: JNINativeInterface_::CallNonvirtualVoidMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallNonvirtualVoidMethodA) - 744usize];
    ["Offset of field: JNINativeInterface_::GetFieldID"]
        [::std::mem::offset_of!(JNINativeInterface_, GetFieldID) - 752usize];
    ["Offset of field: JNINativeInterface_::GetObjectField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetObjectField) - 760usize];
    ["Offset of field: JNINativeInterface_::GetBooleanField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetBooleanField) - 768usize];
    ["Offset of field: JNINativeInterface_::GetByteField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetByteField) - 776usize];
    ["Offset of field: JNINativeInterface_::GetCharField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetCharField) - 784usize];
    ["Offset of field: JNINativeInterface_::GetShortField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetShortField) - 792usize];
    ["Offset of field: JNINativeInterface_::GetIntField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetIntField) - 800usize];
    ["Offset of field: JNINativeInterface_::GetLongField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetLongField) - 808usize];
    ["Offset of field: JNINativeInterface_::GetFloatField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetFloatField) - 816usize];
    ["Offset of field: JNINativeInterface_::GetDoubleField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetDoubleField) - 824usize];
    ["Offset of field: JNINativeInterface_::SetObjectField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetObjectField) - 832usize];
    ["Offset of field: JNINativeInterface_::SetBooleanField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetBooleanField) - 840usize];
    ["Offset of field: JNINativeInterface_::SetByteField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetByteField) - 848usize];
    ["Offset of field: JNINativeInterface_::SetCharField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetCharField) - 856usize];
    ["Offset of field: JNINativeInterface_::SetShortField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetShortField) - 864usize];
    ["Offset of field: JNINativeInterface_::SetIntField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetIntField) - 872usize];
    ["Offset of field: JNINativeInterface_::SetLongField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetLongField) - 880usize];
    ["Offset of field: JNINativeInterface_::SetFloatField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetFloatField) - 888usize];
    ["Offset of field: JNINativeInterface_::SetDoubleField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetDoubleField) - 896usize];
    ["Offset of field: JNINativeInterface_::GetStaticMethodID"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticMethodID) - 904usize];
    ["Offset of field: JNINativeInterface_::CallStaticObjectMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticObjectMethod) - 912usize];
    ["Offset of field: JNINativeInterface_::CallStaticObjectMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticObjectMethodV) - 920usize];
    ["Offset of field: JNINativeInterface_::CallStaticObjectMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticObjectMethodA) - 928usize];
    ["Offset of field: JNINativeInterface_::CallStaticBooleanMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticBooleanMethod) - 936usize];
    ["Offset of field: JNINativeInterface_::CallStaticBooleanMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticBooleanMethodV) - 944usize];
    ["Offset of field: JNINativeInterface_::CallStaticBooleanMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticBooleanMethodA) - 952usize];
    ["Offset of field: JNINativeInterface_::CallStaticByteMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticByteMethod) - 960usize];
    ["Offset of field: JNINativeInterface_::CallStaticByteMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticByteMethodV) - 968usize];
    ["Offset of field: JNINativeInterface_::CallStaticByteMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticByteMethodA) - 976usize];
    ["Offset of field: JNINativeInterface_::CallStaticCharMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticCharMethod) - 984usize];
    ["Offset of field: JNINativeInterface_::CallStaticCharMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticCharMethodV) - 992usize];
    ["Offset of field: JNINativeInterface_::CallStaticCharMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticCharMethodA) - 1000usize];
    ["Offset of field: JNINativeInterface_::CallStaticShortMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticShortMethod) - 1008usize];
    ["Offset of field: JNINativeInterface_::CallStaticShortMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticShortMethodV) - 1016usize];
    ["Offset of field: JNINativeInterface_::CallStaticShortMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticShortMethodA) - 1024usize];
    ["Offset of field: JNINativeInterface_::CallStaticIntMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticIntMethod) - 1032usize];
    ["Offset of field: JNINativeInterface_::CallStaticIntMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticIntMethodV) - 1040usize];
    ["Offset of field: JNINativeInterface_::CallStaticIntMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticIntMethodA) - 1048usize];
    ["Offset of field: JNINativeInterface_::CallStaticLongMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticLongMethod) - 1056usize];
    ["Offset of field: JNINativeInterface_::CallStaticLongMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticLongMethodV) - 1064usize];
    ["Offset of field: JNINativeInterface_::CallStaticLongMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticLongMethodA) - 1072usize];
    ["Offset of field: JNINativeInterface_::CallStaticFloatMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticFloatMethod) - 1080usize];
    ["Offset of field: JNINativeInterface_::CallStaticFloatMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticFloatMethodV) - 1088usize];
    ["Offset of field: JNINativeInterface_::CallStaticFloatMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticFloatMethodA) - 1096usize];
    ["Offset of field: JNINativeInterface_::CallStaticDoubleMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticDoubleMethod) - 1104usize];
    ["Offset of field: JNINativeInterface_::CallStaticDoubleMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticDoubleMethodV) - 1112usize];
    ["Offset of field: JNINativeInterface_::CallStaticDoubleMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticDoubleMethodA) - 1120usize];
    ["Offset of field: JNINativeInterface_::CallStaticVoidMethod"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticVoidMethod) - 1128usize];
    ["Offset of field: JNINativeInterface_::CallStaticVoidMethodV"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticVoidMethodV) - 1136usize];
    ["Offset of field: JNINativeInterface_::CallStaticVoidMethodA"]
        [::std::mem::offset_of!(JNINativeInterface_, CallStaticVoidMethodA) - 1144usize];
    ["Offset of field: JNINativeInterface_::GetStaticFieldID"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticFieldID) - 1152usize];
    ["Offset of field: JNINativeInterface_::GetStaticObjectField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticObjectField) - 1160usize];
    ["Offset of field: JNINativeInterface_::GetStaticBooleanField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticBooleanField) - 1168usize];
    ["Offset of field: JNINativeInterface_::GetStaticByteField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticByteField) - 1176usize];
    ["Offset of field: JNINativeInterface_::GetStaticCharField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticCharField) - 1184usize];
    ["Offset of field: JNINativeInterface_::GetStaticShortField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticShortField) - 1192usize];
    ["Offset of field: JNINativeInterface_::GetStaticIntField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticIntField) - 1200usize];
    ["Offset of field: JNINativeInterface_::GetStaticLongField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticLongField) - 1208usize];
    ["Offset of field: JNINativeInterface_::GetStaticFloatField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticFloatField) - 1216usize];
    ["Offset of field: JNINativeInterface_::GetStaticDoubleField"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStaticDoubleField) - 1224usize];
    ["Offset of field: JNINativeInterface_::SetStaticObjectField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticObjectField) - 1232usize];
    ["Offset of field: JNINativeInterface_::SetStaticBooleanField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticBooleanField) - 1240usize];
    ["Offset of field: JNINativeInterface_::SetStaticByteField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticByteField) - 1248usize];
    ["Offset of field: JNINativeInterface_::SetStaticCharField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticCharField) - 1256usize];
    ["Offset of field: JNINativeInterface_::SetStaticShortField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticShortField) - 1264usize];
    ["Offset of field: JNINativeInterface_::SetStaticIntField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticIntField) - 1272usize];
    ["Offset of field: JNINativeInterface_::SetStaticLongField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticLongField) - 1280usize];
    ["Offset of field: JNINativeInterface_::SetStaticFloatField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticFloatField) - 1288usize];
    ["Offset of field: JNINativeInterface_::SetStaticDoubleField"]
        [::std::mem::offset_of!(JNINativeInterface_, SetStaticDoubleField) - 1296usize];
    ["Offset of field: JNINativeInterface_::NewString"]
        [::std::mem::offset_of!(JNINativeInterface_, NewString) - 1304usize];
    ["Offset of field: JNINativeInterface_::GetStringLength"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStringLength) - 1312usize];
    ["Offset of field: JNINativeInterface_::GetStringChars"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStringChars) - 1320usize];
    ["Offset of field: JNINativeInterface_::ReleaseStringChars"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseStringChars) - 1328usize];
    ["Offset of field: JNINativeInterface_::NewStringUTF"]
        [::std::mem::offset_of!(JNINativeInterface_, NewStringUTF) - 1336usize];
    ["Offset of field: JNINativeInterface_::GetStringUTFLength"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStringUTFLength) - 1344usize];
    ["Offset of field: JNINativeInterface_::GetStringUTFChars"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStringUTFChars) - 1352usize];
    ["Offset of field: JNINativeInterface_::ReleaseStringUTFChars"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseStringUTFChars) - 1360usize];
    ["Offset of field: JNINativeInterface_::GetArrayLength"]
        [::std::mem::offset_of!(JNINativeInterface_, GetArrayLength) - 1368usize];
    ["Offset of field: JNINativeInterface_::NewObjectArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewObjectArray) - 1376usize];
    ["Offset of field: JNINativeInterface_::GetObjectArrayElement"]
        [::std::mem::offset_of!(JNINativeInterface_, GetObjectArrayElement) - 1384usize];
    ["Offset of field: JNINativeInterface_::SetObjectArrayElement"]
        [::std::mem::offset_of!(JNINativeInterface_, SetObjectArrayElement) - 1392usize];
    ["Offset of field: JNINativeInterface_::NewBooleanArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewBooleanArray) - 1400usize];
    ["Offset of field: JNINativeInterface_::NewByteArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewByteArray) - 1408usize];
    ["Offset of field: JNINativeInterface_::NewCharArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewCharArray) - 1416usize];
    ["Offset of field: JNINativeInterface_::NewShortArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewShortArray) - 1424usize];
    ["Offset of field: JNINativeInterface_::NewIntArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewIntArray) - 1432usize];
    ["Offset of field: JNINativeInterface_::NewLongArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewLongArray) - 1440usize];
    ["Offset of field: JNINativeInterface_::NewFloatArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewFloatArray) - 1448usize];
    ["Offset of field: JNINativeInterface_::NewDoubleArray"]
        [::std::mem::offset_of!(JNINativeInterface_, NewDoubleArray) - 1456usize];
    ["Offset of field: JNINativeInterface_::GetBooleanArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, GetBooleanArrayElements) - 1464usize];
    ["Offset of field: JNINativeInterface_::GetByteArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, GetByteArrayElements) - 1472usize];
    ["Offset of field: JNINativeInterface_::GetCharArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, GetCharArrayElements) - 1480usize];
    ["Offset of field: JNINativeInterface_::GetShortArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, GetShortArrayElements) - 1488usize];
    ["Offset of field: JNINativeInterface_::GetIntArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, GetIntArrayElements) - 1496usize];
    ["Offset of field: JNINativeInterface_::GetLongArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, GetLongArrayElements) - 1504usize];
    ["Offset of field: JNINativeInterface_::GetFloatArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, GetFloatArrayElements) - 1512usize];
    ["Offset of field: JNINativeInterface_::GetDoubleArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, GetDoubleArrayElements) - 1520usize];
    ["Offset of field: JNINativeInterface_::ReleaseBooleanArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseBooleanArrayElements) - 1528usize];
    ["Offset of field: JNINativeInterface_::ReleaseByteArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseByteArrayElements) - 1536usize];
    ["Offset of field: JNINativeInterface_::ReleaseCharArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseCharArrayElements) - 1544usize];
    ["Offset of field: JNINativeInterface_::ReleaseShortArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseShortArrayElements) - 1552usize];
    ["Offset of field: JNINativeInterface_::ReleaseIntArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseIntArrayElements) - 1560usize];
    ["Offset of field: JNINativeInterface_::ReleaseLongArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseLongArrayElements) - 1568usize];
    ["Offset of field: JNINativeInterface_::ReleaseFloatArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseFloatArrayElements) - 1576usize];
    ["Offset of field: JNINativeInterface_::ReleaseDoubleArrayElements"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseDoubleArrayElements) - 1584usize];
    ["Offset of field: JNINativeInterface_::GetBooleanArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetBooleanArrayRegion) - 1592usize];
    ["Offset of field: JNINativeInterface_::GetByteArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetByteArrayRegion) - 1600usize];
    ["Offset of field: JNINativeInterface_::GetCharArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetCharArrayRegion) - 1608usize];
    ["Offset of field: JNINativeInterface_::GetShortArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetShortArrayRegion) - 1616usize];
    ["Offset of field: JNINativeInterface_::GetIntArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetIntArrayRegion) - 1624usize];
    ["Offset of field: JNINativeInterface_::GetLongArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetLongArrayRegion) - 1632usize];
    ["Offset of field: JNINativeInterface_::GetFloatArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetFloatArrayRegion) - 1640usize];
    ["Offset of field: JNINativeInterface_::GetDoubleArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetDoubleArrayRegion) - 1648usize];
    ["Offset of field: JNINativeInterface_::SetBooleanArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, SetBooleanArrayRegion) - 1656usize];
    ["Offset of field: JNINativeInterface_::SetByteArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, SetByteArrayRegion) - 1664usize];
    ["Offset of field: JNINativeInterface_::SetCharArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, SetCharArrayRegion) - 1672usize];
    ["Offset of field: JNINativeInterface_::SetShortArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, SetShortArrayRegion) - 1680usize];
    ["Offset of field: JNINativeInterface_::SetIntArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, SetIntArrayRegion) - 1688usize];
    ["Offset of field: JNINativeInterface_::SetLongArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, SetLongArrayRegion) - 1696usize];
    ["Offset of field: JNINativeInterface_::SetFloatArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, SetFloatArrayRegion) - 1704usize];
    ["Offset of field: JNINativeInterface_::SetDoubleArrayRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, SetDoubleArrayRegion) - 1712usize];
    ["Offset of field: JNINativeInterface_::RegisterNatives"]
        [::std::mem::offset_of!(JNINativeInterface_, RegisterNatives) - 1720usize];
    ["Offset of field: JNINativeInterface_::UnregisterNatives"]
        [::std::mem::offset_of!(JNINativeInterface_, UnregisterNatives) - 1728usize];
    ["Offset of field: JNINativeInterface_::MonitorEnter"]
        [::std::mem::offset_of!(JNINativeInterface_, MonitorEnter) - 1736usize];
    ["Offset of field: JNINativeInterface_::MonitorExit"]
        [::std::mem::offset_of!(JNINativeInterface_, MonitorExit) - 1744usize];
    ["Offset of field: JNINativeInterface_::GetJavaVM"]
        [::std::mem::offset_of!(JNINativeInterface_, GetJavaVM) - 1752usize];
    ["Offset of field: JNINativeInterface_::GetStringRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStringRegion) - 1760usize];
    ["Offset of field: JNINativeInterface_::GetStringUTFRegion"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStringUTFRegion) - 1768usize];
    ["Offset of field: JNINativeInterface_::GetPrimitiveArrayCritical"]
        [::std::mem::offset_of!(JNINativeInterface_, GetPrimitiveArrayCritical) - 1776usize];
    ["Offset of field: JNINativeInterface_::ReleasePrimitiveArrayCritical"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleasePrimitiveArrayCritical) - 1784usize];
    ["Offset of field: JNINativeInterface_::GetStringCritical"]
        [::std::mem::offset_of!(JNINativeInterface_, GetStringCritical) - 1792usize];
    ["Offset of field: JNINativeInterface_::ReleaseStringCritical"]
        [::std::mem::offset_of!(JNINativeInterface_, ReleaseStringCritical) - 1800usize];
    ["Offset of field: JNINativeInterface_::NewWeakGlobalRef"]
        [::std::mem::offset_of!(JNINativeInterface_, NewWeakGlobalRef) - 1808usize];
    ["Offset of field: JNINativeInterface_::DeleteWeakGlobalRef"]
        [::std::mem::offset_of!(JNINativeInterface_, DeleteWeakGlobalRef) - 1816usize];
    ["Offset of field: JNINativeInterface_::ExceptionCheck"]
        [::std::mem::offset_of!(JNINativeInterface_, ExceptionCheck) - 1824usize];
    ["Offset of field: JNINativeInterface_::NewDirectByteBuffer"]
        [::std::mem::offset_of!(JNINativeInterface_, NewDirectByteBuffer) - 1832usize];
    ["Offset of field: JNINativeInterface_::GetDirectBufferAddress"]
        [::std::mem::offset_of!(JNINativeInterface_, GetDirectBufferAddress) - 1840usize];
    ["Offset of field: JNINativeInterface_::GetDirectBufferCapacity"]
        [::std::mem::offset_of!(JNINativeInterface_, GetDirectBufferCapacity) - 1848usize];
    ["Offset of field: JNINativeInterface_::GetObjectRefType"]
        [::std::mem::offset_of!(JNINativeInterface_, GetObjectRefType) - 1856usize];
    ["Offset of field: JNINativeInterface_::GetModule"]
        [::std::mem::offset_of!(JNINativeInterface_, GetModule) - 1864usize];
    ["Offset of field: JNINativeInterface_::IsVirtualThread"]
        [::std::mem::offset_of!(JNINativeInterface_, IsVirtualThread) - 1872usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JNIEnv_ {
    pub functions: *const JNINativeInterface_,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of JNIEnv_"][::std::mem::size_of::<JNIEnv_>() - 8usize];
    ["Alignment of JNIEnv_"][::std::mem::align_of::<JNIEnv_>() - 8usize];
    ["Offset of field: JNIEnv_::functions"][::std::mem::offset_of!(JNIEnv_, functions) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JavaVMOption {
    pub optionString: *mut ::std::os::raw::c_char,
    pub extraInfo: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of JavaVMOption"][::std::mem::size_of::<JavaVMOption>() - 16usize];
    ["Alignment of JavaVMOption"][::std::mem::align_of::<JavaVMOption>() - 8usize];
    ["Offset of field: JavaVMOption::optionString"]
        [::std::mem::offset_of!(JavaVMOption, optionString) - 0usize];
    ["Offset of field: JavaVMOption::extraInfo"]
        [::std::mem::offset_of!(JavaVMOption, extraInfo) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JavaVMInitArgs {
    pub version: jint,
    pub nOptions: jint,
    pub options: *mut JavaVMOption,
    pub ignoreUnrecognized: jboolean,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of JavaVMInitArgs"][::std::mem::size_of::<JavaVMInitArgs>() - 24usize];
    ["Alignment of JavaVMInitArgs"][::std::mem::align_of::<JavaVMInitArgs>() - 8usize];
    ["Offset of field: JavaVMInitArgs::version"]
        [::std::mem::offset_of!(JavaVMInitArgs, version) - 0usize];
    ["Offset of field: JavaVMInitArgs::nOptions"]
        [::std::mem::offset_of!(JavaVMInitArgs, nOptions) - 4usize];
    ["Offset of field: JavaVMInitArgs::options"]
        [::std::mem::offset_of!(JavaVMInitArgs, options) - 8usize];
    ["Offset of field: JavaVMInitArgs::ignoreUnrecognized"]
        [::std::mem::offset_of!(JavaVMInitArgs, ignoreUnrecognized) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JavaVMAttachArgs {
    pub version: jint,
    pub name: *mut ::std::os::raw::c_char,
    pub group: jobject,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of JavaVMAttachArgs"][::std::mem::size_of::<JavaVMAttachArgs>() - 24usize];
    ["Alignment of JavaVMAttachArgs"][::std::mem::align_of::<JavaVMAttachArgs>() - 8usize];
    ["Offset of field: JavaVMAttachArgs::version"]
        [::std::mem::offset_of!(JavaVMAttachArgs, version) - 0usize];
    ["Offset of field: JavaVMAttachArgs::name"]
        [::std::mem::offset_of!(JavaVMAttachArgs, name) - 8usize];
    ["Offset of field: JavaVMAttachArgs::group"]
        [::std::mem::offset_of!(JavaVMAttachArgs, group) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JNIInvokeInterface_ {
    pub reserved0: *mut ::std::os::raw::c_void,
    pub reserved1: *mut ::std::os::raw::c_void,
    pub reserved2: *mut ::std::os::raw::c_void,
    pub DestroyJavaVM: ::std::option::Option<unsafe extern "C" fn(vm: *mut JavaVM) -> jint>,
    pub AttachCurrentThread: ::std::option::Option<
        unsafe extern "C" fn(
            vm: *mut JavaVM,
            penv: *mut *mut ::std::os::raw::c_void,
            args: *mut ::std::os::raw::c_void,
        ) -> jint,
    >,
    pub DetachCurrentThread: ::std::option::Option<unsafe extern "C" fn(vm: *mut JavaVM) -> jint>,
    pub GetEnv: ::std::option::Option<
        unsafe extern "C" fn(
            vm: *mut JavaVM,
            penv: *mut *mut ::std::os::raw::c_void,
            version: jint,
        ) -> jint,
    >,
    pub AttachCurrentThreadAsDaemon: ::std::option::Option<
        unsafe extern "C" fn(
            vm: *mut JavaVM,
            penv: *mut *mut ::std::os::raw::c_void,
            args: *mut ::std::os::raw::c_void,
        ) -> jint,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of JNIInvokeInterface_"][::std::mem::size_of::<JNIInvokeInterface_>() - 64usize];
    ["Alignment of JNIInvokeInterface_"][::std::mem::align_of::<JNIInvokeInterface_>() - 8usize];
    ["Offset of field: JNIInvokeInterface_::reserved0"]
        [::std::mem::offset_of!(JNIInvokeInterface_, reserved0) - 0usize];
    ["Offset of field: JNIInvokeInterface_::reserved1"]
        [::std::mem::offset_of!(JNIInvokeInterface_, reserved1) - 8usize];
    ["Offset of field: JNIInvokeInterface_::reserved2"]
        [::std::mem::offset_of!(JNIInvokeInterface_, reserved2) - 16usize];
    ["Offset of field: JNIInvokeInterface_::DestroyJavaVM"]
        [::std::mem::offset_of!(JNIInvokeInterface_, DestroyJavaVM) - 24usize];
    ["Offset of field: JNIInvokeInterface_::AttachCurrentThread"]
        [::std::mem::offset_of!(JNIInvokeInterface_, AttachCurrentThread) - 32usize];
    ["Offset of field: JNIInvokeInterface_::DetachCurrentThread"]
        [::std::mem::offset_of!(JNIInvokeInterface_, DetachCurrentThread) - 40usize];
    ["Offset of field: JNIInvokeInterface_::GetEnv"]
        [::std::mem::offset_of!(JNIInvokeInterface_, GetEnv) - 48usize];
    ["Offset of field: JNIInvokeInterface_::AttachCurrentThreadAsDaemon"]
        [::std::mem::offset_of!(JNIInvokeInterface_, AttachCurrentThreadAsDaemon) - 56usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JavaVM_ {
    pub functions: *const JNIInvokeInterface_,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of JavaVM_"][::std::mem::size_of::<JavaVM_>() - 8usize];
    ["Alignment of JavaVM_"][::std::mem::align_of::<JavaVM_>() - 8usize];
    ["Offset of field: JavaVM_::functions"][::std::mem::offset_of!(JavaVM_, functions) - 0usize];
};
unsafe extern "C" {
    pub fn JNI_GetDefaultJavaVMInitArgs(args: *mut ::std::os::raw::c_void) -> jint;
}
unsafe extern "C" {
    pub fn JNI_CreateJavaVM(
        pvm: *mut *mut JavaVM,
        penv: *mut *mut ::std::os::raw::c_void,
        args: *mut ::std::os::raw::c_void,
    ) -> jint;
}
unsafe extern "C" {
    pub fn JNI_GetCreatedJavaVMs(arg1: *mut *mut JavaVM, arg2: jsize, arg3: *mut jsize) -> jint;
}
unsafe extern "C" {
    pub fn JNI_OnLoad(vm: *mut JavaVM, reserved: *mut ::std::os::raw::c_void) -> jint;
}
unsafe extern "C" {
    pub fn JNI_OnUnload(vm: *mut JavaVM, reserved: *mut ::std::os::raw::c_void);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __crt_locale_data {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __crt_multibyte_data {
    pub _address: u8,
}
pub type __builtin_va_list = *mut ::std::os::raw::c_char;
